// Script pour v√©rifier le statut d'authentification
console.log('üîç V√©rification du statut d\'authentification...\n');

// V√©rifier les tokens dans le localStorage
if (typeof window !== 'undefined') {
  const accessToken = localStorage.getItem('employee_access_token');
  const refreshToken = localStorage.getItem('employee_refresh_token');
  
  console.log('üìã Tokens trouv√©s:');
  console.log(`   Access Token: ${accessToken ? '‚úÖ Pr√©sent' : '‚ùå Absent'}`);
  console.log(`   Refresh Token: ${refreshToken ? '‚úÖ Pr√©sent' : '‚ùå Absent'}`);
  
  if (accessToken) {
    console.log('\nüîê D√©tails du token d\'acc√®s:');
    try {
      // D√©coder le token JWT (partie payload)
      const base64Url = accessToken.split('.')[1];
      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
      const payload = JSON.parse(atob(base64));
      
      console.log(`   Issued At: ${new Date(payload.iat * 1000).toLocaleString()}`);
      console.log(`   Expires At: ${new Date(payload.exp * 1000).toLocaleString()}`);
      console.log(`   User ID: ${payload.sub || 'Non sp√©cifi√©'}`);
      console.log(`   Email: ${payload.email || 'Non sp√©cifi√©'}`);
      
      // V√©rifier si le token est expir√©
      const currentTime = Math.floor(Date.now() / 1000);
      const isExpired = payload.exp < currentTime;
      console.log(`   Expir√©: ${isExpired ? '‚ùå OUI' : '‚úÖ NON'}`);
      
      if (isExpired) {
        console.log('\n‚ö†Ô∏è Le token est expir√© ! Veuillez vous reconnecter.');
      } else {
        console.log('\n‚úÖ Le token est valide !');
      }
    } catch (error) {
      console.log('‚ùå Erreur lors du d√©codage du token:', error.message);
    }
  } else {
    console.log('\n‚ùå Aucun token d\'acc√®s trouv√©. Veuillez vous connecter.');
  }
  
  // V√©rifier les autres cl√©s de localStorage
  console.log('\nüì¶ Autres cl√©s dans localStorage:');
  const allKeys = Object.keys(localStorage);
  allKeys.forEach(key => {
    if (key.includes('token') || key.includes('auth') || key.includes('user')) {
      const value = localStorage.getItem(key);
      console.log(`   ${key}: ${value ? '‚úÖ Pr√©sent' : '‚ùå Absent'}`);
    }
  });
  
} else {
  console.log('‚ùå Ce script doit √™tre ex√©cut√© dans un navigateur web.');
}

console.log('\nüí° Pour tester la page de changement de mot de passe:');
console.log('1. Assurez-vous d\'√™tre connect√© sur /login');
console.log('2. V√©rifiez que les tokens sont pr√©sents ci-dessus');
console.log('3. Acc√©dez √† /auth/change-password');
console.log('4. Si le probl√®me persiste, essayez de vous reconnecter');
